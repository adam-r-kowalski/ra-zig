(fn print-bool :args ((value u8)) :ret i32
  :body (print (if value 't' 'f')))

(fn start :args () :ret i32
  :body
  (let o-rdonly 0)
  (let fd (open "/Users/adamkowalski/code/ra/examples/titanic/train.csv" o-rdonly))
  (let seek-end 2)
  (let len (lseek fd 0 seek-end))
  (let seek-set 0)
  (lseek fd 0 seek-set)
  (let prot-read i32 1)
  (let prot-write i32 2)
  (let prot (bit-or prot-read prot-write))
  (let map-private i32 0)
  (let map-anonymous i32 1)
  (let flags (bit-or map-private map-anonymous))
  (var buffer (ptr u8) (mmap null len prot flags -1 0))
  (let bytes (read fd buffer len))
  (close fd)
  (let target 'P')
  (print-bool (= target (deref buffer)))
  (print buffer)
  (munmap buffer len))
